
from tkinter import *
import string
import itertools

result = ""
normal_form_1 = ""
normal_form_2 = ""
alphabet = list(string.ascii_letters)
symbol_lexique = ["(", ")", " ", "&", "|", "-"]
all_symbol = symbol_lexique + alphabet
check_count = 0
nb_variable = 0


def check():
    global nb_variable
    global check_count
    global normal_form_1
    global normal_form_2

    if check_count == 0:
        normal_form_1 = str(logic1.get())
        normal_form_2 = str(logic2.get())
        list1 = list(normal_form_1)
        list2 = list(normal_form_2)

        count_variable1 = []
        count_variable2 = []

        for letter in alphabet:
            if normal_form_1.count(letter) > 0:
                count_variable1.append(str(letter))
            if normal_form_2.count(letter) > 0:
                count_variable2.append(str(letter))
        logic1.set(str(count_variable1))
        logic2.set(str(count_variable2))
        if len(count_variable1) != len(count_variable2):
            logic1.set("bad Entry, different number of variable, the first one has " + str(count_variable1) +
                       " variables")
            logic2.set("bad Entry, different number of variable, the second one has " + str(count_variable2) +
                       " variables")
        else:
            for symbol in list1:
                if symbol not in all_symbol:
                    logic1.set("bad Entry, unresolved symbol : " + symbol)
            for symbol in list2:
                if symbol not in all_symbol:
                    logic2.set("bad Entry, unresolved symbol : " + symbol)
            set_1, set_2 = set(count_variable1), set(count_variable2)

            if len(set_1.intersection(set_2)) != len(count_variable1):
                logic1.set("bad Entry, not the same variable : " + str(count_variable1))
                logic2.set("bad Entry, not the same variable : " + str(count_variable2))
            else:
                logic1.set("Entry ok")
                logic2.set("Entry ok")
                nb_variable = len(count_variable1)
        check_count += 1
    else:
        logic1.set("the inspection has already been done")
        logic2.set("the inspection has already been done")


def compare():
    logic1.set(normal_form_1)
    logic2.set(normal_form_2)
    bool = [0, 1]
    logic_table = list(itertools.product('01', repeat=nb_variable))
    logicResult.set(logic_table[0])



if __name__ == "__main__":

    gui = Tk()
    gui.configure(background="light blue")
    gui.title("Logic Comparator Pro")
    gui.geometry("800x400")

    logic1 = StringVar()
    logic2 = StringVar()
    logicResult = StringVar()

    name_label1 = Label(gui, text="Logic Proposition 1", pady=10, bg="light grey", relief='raised').pack(fill=X)
    logic_entry1 = Entry(gui, bg="white", fg="black", textvariable=logic1).pack(fill=BOTH)
    name_label2 = Label(gui, text="Logic Proposition 2", pady=10, bg="light grey", relief='raised').pack(fill=BOTH)
    logic_entry2 = Entry(gui, bg="white", fg="black", textvariable=logic2).pack(fill=BOTH)
    bouton_check = Button(gui, text=' Check ', fg='white', bg='blue', bd=4, command=lambda: check())\
        .pack(fill=BOTH, padx=350, pady=5)
    bouton_compare = Button(gui, text=' Compare ', fg='white', bg='green', bd=4, command=lambda: compare())\
        .pack(fill=BOTH, padx=350, pady=5)

    logic_entry3 = Entry(gui, bg="white", fg="black", textvariable=logicResult).pack(fill=BOTH, padx=350)
    logic1.set('enter your first logic expression')
    logic2.set('enter your second logic expression')
    logic1.set('(b & a) | (c & a)')
    logic2.set('(b | c) & a')

    gui.mainloop()
